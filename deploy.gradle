apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.jfrog.artifactory'

def artifact = new Properties()
artifact.load(new FileInputStream("deploy.settings"))

version=artifact.version
group=artifact.groupId

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'jar'
            groupId artifact.groupId
            artifactId artifact.id
            version artifact.version
            name artifact.id // pom.project.name must be same as bintray.pkg.name
            url artifact.siteUrl
            inceptionYear '2018'
            licenses {
                license { // HARDCODED
                    name 'GPL-3.0'
                    url 'https://www.gnu.org/licenses/gpl.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection artifact.gitUrl
                developerConnection artifact.gitUrl
                url artifact.siteUrl
            }
        }
    }
}

Properties properties = new Properties()
properties.load(new FileInputStream("deploy.properties"))

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = artifact.id
        websiteUrl = artifact.siteUrl
        vcsUrl = artifact.gitUrl
        licenses = artifact.licenses
        publish = true
        version {
            name = artifact.version
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}
/*
task javadoc(type: Javadoc) {
    source = sourceSets.main.java.srcDirs
    classpath += project.files(getBootClasspath().join(File.pathSeparator))
}
*/

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    // options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

// artifactory

artifactory {
    contextUrl = properties.getProperty("artifactory_contextUrl")

    publish {
        repository {
            repoKey = properties.getProperty("artifactory_repository")
            username = properties.getProperty("artifactory_publisheruser")
            password = properties.getProperty("artifactory_publisherpassword")
            maven = true
        }

        defaults {
            // Reference to Gradle configurations defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publishConfigs('archives', 'published')
            publishPom = true
        }
    }
}