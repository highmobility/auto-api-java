buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.13.0"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

apply plugin: "java-library"
apply plugin: "maven"
apply plugin: "com.jfrog.artifactory"
apply plugin: 'com.jfrog.bintray'

repositories {
    jcenter()
}

def artifact = new Properties()
artifact.load(new FileInputStream("$projectDir/deploy.settings"))

group = artifact.groupId
version = artifact.version

// these are not release numbers. release numbers are in deploy.settings files.
ext.ver = [
        utils: "1.4.4"
]

ext.deps = [
        "utils"   : "com.highmobility:hmkit-utils:${ver.utils}",
        "findBugs": 'com.google.code.findbugs:jsr305:3.0.2'
]

dependencies {
    if (project.hasProperty('releaseType') == true && project.releaseType == 0) {
        implementation project(':hmkit-utils')
    } else {
        api deps.utils
    }

    implementation 'org.slf4j:slf4j-api:1.7.25'

    implementation deps.findBugs // for @Nullable

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testImplementation 'org.slf4j:slf4j-simple:1.7.25'
}

// deploy
//
if (project.hasProperty("hmArtifactoryUrl")) {
    // add the sources and doc artifacts
    task sourcesJar(type: Jar) {
        from sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        from javadoc.destinationDir
        classifier = 'javadoc'
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    // artifactory
    artifactory {
        contextUrl = hmArtifactoryUrl

        publish {
            repository {
                repoKey = project.hasProperty("repo") ? project.property("repo") : artifact.repo
                username = hmArtifactoryPublishUser
                password = hmArtifactoryPublishPassword
            }

            defaults {
                publishConfigs('archives', 'published')
                publishIvy = false
            }
        }
    }

    // bintray
    install {
        repositories.mavenInstaller {
            pom.project {
                packaging 'jar'
                groupId artifact.groupId
                artifactId artifact.id
                version artifact.version
                name artifact.id // pom.project.name must be same as bintray.pkg.name
                url artifact.siteUrl
                inceptionYear '2018'
                licenses {
                    license { // HARDCODED
                        name 'MIT'
                        url 'https://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
                scm {
                    connection artifact.gitUrl
                    developerConnection artifact.gitUrl
                    url artifact.siteUrl
                }
            }
        }
    }

    bintray {
        user = hmBintrayUser
        key = hmBintrayApikey

        configurations = ['archives']
        pkg {
            repo = "maven"
            name = artifact.id
            websiteUrl = artifact.siteUrl
            vcsUrl = artifact.gitUrl
            licenses = artifact.licenses

            version {
                name = artifact.version
            }
        }
    }
}